[["index.html", "ACRES Synthetic Population Chapter 1 A Novel Method for Generating Spatially Resolved Synthetic Populations for Health Impact Assessments in Vulnerable Populations", " ACRES Synthetic Population 2025-08-27 Chapter 1 A Novel Method for Generating Spatially Resolved Synthetic Populations for Health Impact Assessments in Vulnerable Populations Flannery Black-Ingersoll1, Chad W. Milando1, Zach Popp1, Mariangelí Echevarría-Ramos2, M. Patricia Fabian1,3, Amruta Nori-Sarma4,5, and Jonathan I. Levy1 1 Department of Environmental Health, Boston University School of Public Health, 715 Albany St, Boston, MA 02118, US 2 Mystic River Watershed Association, 23 Maple Street, Arlington, MA 02746, US 3 Institute for Global Sustainability, Boston University, 111 Cummington Mall Suite 149, Boston, MA 02215, US 4 Department of Environmental Health, Harvard T.H. Chan School of Public Health, 677 Huntington Ave, Boston, MA 02115, US 5 Center for Climate, Health, and the Global Environment (C-CHANGE), Harvard T.H. Chan School of Public Health, 677 Huntington Ave, Boston, MA 02115, US Corresponding author: Flannery Black-Ingersoll (fblackin@bu.edu) Senior corresponding author: Jonathan I. Levy (jonlevy@bu.edu) The code and methods described in this article are outlined in further detail in this R bookdown document. The code is provided in the github repository here: https://github.com/Flannery-BIng/synth_pop. "],["prerequisites.html", "Chapter 2 Prerequisites", " Chapter 2 Prerequisites This book details synthetic population generation, or ‘synthpop’ generation, provides detailed methods to create your own synthpop using a combination of publicly available datasets. The code for reproducing these methods is provided in the github repository here: https://github.com/Flannery-BIng/synth_pop What is a synthetic population? The following demonstrates what a synthetic population would look like for a sample of one Public Use Microdata Area (PUMA # 00503). This map is created using a random sampling of 25% of each respective census tract’s synthetic population generated in order to make it easier to view. The number of dots therefore represents the population density in that tract. We can compare this population to the census tract level statistics provided by ACS. Let’s take a look at the Guatemalan population by tract, for example. We see a similar concentration in the southern tracts of the PUMA. "],["intro.html", "Chapter 3 Introduction 3.1 Project Objectives 3.2 Previous work from BUSPH", " Chapter 3 Introduction 3.1 Project Objectives Overall: to develop a highly spatially-resolved synthetic population for application in epidemiological research in 10 Public Use Microdata Areas (first by census tract, then, by parcel). 1. Use and expand R code from (Milando et al. 2021) to pull and prepare datasets from the American Community Survey (5-year detailed estimates tables) and Public Use Microdata Samples (both from the United States Census Bureau). 2. Adapt Fortran code from (Milando et al. 2021) to run on the Mac M1 chip. Use code to build the combinatorial optimization executable (hereafter referred to as CO_BU). 3. Run CO_BU with the inputs from R code constraint tables, and read the resulting estimates, weight, and estimate_fit data from the CO_BU outputs in R. 4. Develop comprehensive documentation of efforts using rBookdown (see document you are currently viewing!). 5. Build an R package that interacts with Fortran and allows others to repeat this process with PUMAs across the United States (this is a bit ambitious). 6. Produce a paper on the methods and provide a case study as an example of the application of this work. 3.2 Previous work from BUSPH Community-Wide Health Risk Assessment Using Geographically Resolved Demographic Data: A Synthetic Population Approach (Levy, Fabian, &amp; Peters, 2014) Given insufficient geographic resolution in existing datasets on population demographics, this paper models a synthetic population approach using a cumulative risk assessment (which documents risks from multiple agents)(Levy, Fabian, and Peters 2014). Three major data inputs are used: ACS (American Community Survey) 5-year PUMA (Public Use Microdata Area) (Individual Data) ACS 5-year Census Tract Data (Constraints) BRFSS (Behavioral Risk Factor Surveillance System) (Individual Data) The ACS data inputs are used in the development of the synthetic population, while the BRFSS data input is used for the application of the synthetic population to an epidemiological analysis of predictors of the outcome (in this paper, smoking behavior). The method of forming the synthetic population is simulated annealing with probabilistic reweighting: Select a random subset of households Compare the demographics of the random sample to the aggregate-level demographics distribution Replace individual households to see if the fit improves Application: CO software package (Williamson 2007) Key limitations: Underrepresentation of undocumented populations ACS microdata uses a very small subsample to represent the population of interest Community-Engaged Modeling of Geographic and Demographic Patterns of Multiple Public Health Risk Factors (Basra, Fabian, Holberger, French, and Levy, 2017) This second publication (Basra et al. 2017) uses the synthetic population created in the article published in 2014. BRFSS (Behavioral Risk Factor Surveillance System) data was used to assess several outcomes: BMI, exercise, fruit and vegetable consumption, and diabetes prevalence. Regression models included: multivariable logistic regression for exercise, fruit and vegetable consumption, and diabetes prevalence; multivariable linear regression for BMI. Key limitations: ACS variables do not capture the full breadth of exposures predicting these outcomes Undocumented populations are excluded from census datasets Limitations of the BRFSS methodology Modeling the impact of exposure reductions using multi-stressor epidemiology, exposure models, and synthetic microdata: an application to birthweight in two environmental justice communities (Milando, Yitshak-Sade, Zanobetti, Levy, Laden, and Fabian, 2020) This third publication expands on the synthetic population methods and looks at changes in birthweight distribution as a result of simulated environmental changes (Milando et al. 2021). Key data inputs: ACS (American Community Survey) 5-year PUMA (Public Use Microdata Area) (Individual Data) ACS 5-year Census Tract Data (Constraints) MA Births State Data (Age, race-adjusted birth rates; probability distributions for gestational age, parity, smoking during pregnancy and goverment support) The method of forming the synthetic population is an expansion of the methods applied for the prior two papers, with two rounds of simulated annealing: Simulated annealing with replacement to create a synthetic population for Chelsea and Dorchester Simulated annealing without replacement, with probability sampling and logistic regression to create synthetic population of women giving birth In application of the generated synthetic population, this study applies probabilistic and regression modeling to predictions of newborn birthweight outcomes Used Monte Carlo to introduce uncertainty to predictions of sociobehavioral and clinical risk factors Application: CO software package (Williamson 2007) Key limitations: Same probability given to all possible birthdays Monte Carlo methods likely don’t fully account for uncertainty Only looked at the census tract level, higher spatial resolution would improve simulation Challenge of assigning exposure directly rather than estimating via proxy variables References "],["literature.html", "Chapter 4 Literature 4.1 PopGen 4.2 PopSynWin 4.3 synthpop R 4.4 simPop R", " Chapter 4 Literature Some literature on approaches to synthetic population generation: 4.1 PopGen Synthetic population generator: PopGen (Mobility Analytics Research Group, 2016) Enhanced synthetic population generator that accomodates control variables at multiple geographic resolutions (Konduri, You, Garikapati, and Pendyala, 2016) A methodology to match distributions of both household and person attributes in the generation of synthetic populations (Ye, Konduri, Pendyala, Sana, and Waddell, 2009) The PopGen software (MARG 2016) was designed by the Mobility Analytics Research Group, with the main team of scientists cited in the second source above (Konduri et al. 2016), and was last updated in 2016. The methodology was presented at the 8th Annual Meeting of the Transportation Research Board in Washington, D.C., USA and is described in (Ye et al. 2009). N.B. Might want more here but methods are mathematically complex; requires further reading. 4.2 PopSynWin Creating a synthetic population: A comparison of tools (Jain, Ronald, and Winter, 2015) This article was produced for the 3rd Conference of the Transportation Research Group of India by a group of infrastructure engineers at The University of Melbourne, Australia (Jain, Ronald, and Winter 2015). The work generates and compares synthetic populations using two software programs: PopSynWin (iterative proportional fitting algorithm) and PopGen (see above, iterative proportional update algorithm). Differences between actual and synthesized population characteristics are presented. Authors concluded that the PopGen software yielded better results, with closer matches of person level characteristic distributions to that of the actual population. 4.3 synthpop R synthpop: Bespoke Creation of Synthetic Data in R (Nowok, Raab, &amp; Dibben, 2016) The synthpop R package was published in 2016 and is described in (Nowok, Raab, and Dibben 2016) with a step-by-step example. Can choose between several sampling method options to develop synthetic data: random sample from observed data (default) function of other synthesized data non-parametric methods: classification and regression trees parametric methods: synthesis based on variable type (numeric, binary, unordered and order factors) normal linear regression (preserving marginal distribution/not) logistic regression (ordered/not) polytomous logistic regression predictive mean matching) 4.4 simPop R Simulation of Synthetic Complex Data: The R Package simPop (Templ, Meindl, Kowarik &amp; Dupriez, 2017) The simPop R package was published in 2022 and is described in (Templ et al. 2017). References "],["methods.html", "Chapter 5 Methods 5.1 Geographic area 5.2 ACS constraint tables 5.3 PUMS data 5.4 ACS and PUMS Mapping 5.5 The Code:", " Chapter 5 Methods To generate synthetic populations for each Public Use Microdata Area (PUMA) contained within the Mystic River Watershed area, we used a combination of coding languages (R version 4.2.2 (2022-10-31) and Fortran) and a combination of datasets to generate PUMA-specific constraint tables. Note that the geographic resolution used for these methods is the census tract level. Figure 5.1: Using PUMA and ACS to Generate a Synthetic Population OVERVIEW: Obtaining the datasets required: Creating lists of census tracts located in each of the 10 PUMAs using R Pulling ACS census tract data for each of the 10 PUMA sets of census tracts using R Pulling the Public Use Microdata Samples for each PUMA, including person and household variables The datasets are then cleaned: ACS dataset are cleaned and combined in R (with separate runs for each PUMA) PUMS data is cleaned and combined in R (with separate runs for each PUMA) N.B. (1) and (2) above generate output textfiles which can then be read into and implemented in the CO model, which is written in Fortran. Update a few additional tables: Constraining tables information textfile. This file is also an output file with parameters used to reflect different ancestry bins by PUMA. Control parameters file with PUMA name, number of constraint cells for that PUMA, and row below (number of constraint cells x 10). Run with CO_BU.exe, the executable created by compiling Fortran code. Read the resulting output from the CO work using R. 5.1 Geographic area There are 21 cities and towns included in the Mystic River Watershed area: Burlington Lexington Belmont Watertown Arlington Winchester Woburn Reading Stoneham Medford Somerville Cambridge Boston (East Boston, Charlestown) Everett Malden Melrose Wakefield Chelsea Revere Winthrop Wilmington 5.2 ACS constraint tables ACS 5-year (2021) detailed estimates tables for Massachusetts census tracts were obtained. 5.2.1 Race/Ethnicity B04006 People Reporting Ancestry Collapsed by town/city: all ancestry groups with more than 1% of the population represented are retained, those with less than 1% are collapsed to ‘other’ B03001 Hispanic or Latino by Specific Origin Note that ACS 5-year (2021) detailed estimates tables include People Reporting Single Ancestry, People Reporting Multiple Ancestry, and a combined table of both - People Reporting Ancestry (B04006, used here). In order to approximate the first-ancestry reported, as this is the ancestry included in the PUMS (see section below), we did some re-weighting of the B04006 table variables. In brief, this method was as follows: For a given PUMA (Public Use Microdata Area) in the set of 10 included PUMAs, and for each census tract within that PUMA, we re-weight all ancestry variables by proceeding across columns. If true total \\(= total_{true}\\) and total with multiple ancestries \\(= total_{obs}\\), and observed population in a given ancestry column for that row \\(= Z_{obs}\\), then the re-weighted \\(Z_{rw}\\) is \\[ Z_{rw} = k*Z_{obs} = {\\frac{total_{obs}}{total_{true}}}*Z_{obs} \\] To round to whole units of persons, we use a probabilistic coin-toss methodology: Let the probability of rounding up be \\(mod(Z_{rw},1)\\). Using the ‘set.seed()’ function in R, generate a random number, \\(P\\), between 0 and 1. Then, the rounded number is: \\[ Z_{rw-integer} = Z_{rw}-mod(Z_{rw},1)+P. \\] This is helpful, except when the new total, \\(total_{new}\\) no longer equals \\(total_{true}\\).To amend this, we apply a ‘fudge factor’: Rank all ancestry columns based on \\(Z_{rw_integer}\\). Based on the difference between \\(total_{true}\\) and \\(total_{new}\\), we adjust the data as needed: If \\(total_{new}-total_{true} = 0\\), then do nothing. If \\(total_{new}-total_{true} = total_{diff} &gt; 0\\), remove 1 from each of the top \\(n = total_{diff}\\) ranked ancestries. If \\(total_{new}-total_{true} = total_{diff} &lt; 0\\), add 1 to each of the top \\(n = total_{diff}\\) ranked ancestries. We keep ancestry variables where the proportion of the PUMA of that background equals or exceeds 1%. This means different ancestry variables were included for different PUMAs. The following table provides the list of included ancestries by PUMA. Table 5.1: PUMA01300 Ancestry Mappings PUMA 01300 Ancestries &gt;1% of Total Population American English French..except.Basque. French.Canadian German Greek Irish Italian Polish Portuguese Scottish Swedish Unclassified.or.not.reported Other Table 5.1: PUMA03306 Ancestry Mappings PUMA 03306 Ancestries &gt;1% of Total Population American Arab…Moroccan Brazilian English German Irish Italian Polish Portuguese Unclassified.or.not.reported Other Table 5.1: PUMA00505 Ancestry Mappings PUMA 00505 Ancestries &gt;1% of Total Population American Armenian Eastern.European English European French..except.Basque. French.Canadian German Greek Irish Italian Polish Russian Scottish Swedish Unclassified.or.not.reported Other Table 5.1: PUMA03302 Ancestry Mappings PUMA 03302 Ancestries &gt;1% of Total Population American English European French..except.Basque. French.Canadian German Irish Italian Polish Russian Scottish Unclassified.or.not.reported Other Table 5.1: PUMA00506 Ancestry Mappings PUMA 00506 Ancestries &gt;1% of Total Population American British Eastern.European English European French..except.Basque. German Irish Italian Polish Portuguese Russian Scottish Subsaharan.African…Ethiopian Swedish West.Indian..except.Hispanic.groups….Haitian Unclassified.or.not.reported Other Table 5.1: PUMA00507 Ancestry Mappings PUMA 00507 Ancestries &gt;1% of Total Population American Brazilian English European French..except.Basque. French.Canadian German Irish Italian Polish Portuguese Russian West.Indian..except.Hispanic.groups….Haitian Unclassified.or.not.reported Other Table 5.1: PUMA00508 Ancestry Mappings PUMA 00508 Ancestries &gt;1% of Total Population American Brazilian English French..except.Basque. French.Canadian German Irish Italian Polish Portuguese Russian Scottish West.Indian..except.Hispanic.groups….Haitian Unclassified.or.not.reported Other Table 5.1: PUMA01000 Ancestry Mappings PUMA 01000 Ancestries &gt;1% of Total Population American English French..except.Basque. French.Canadian German Greek Irish Italian Polish Portuguese Russian Scottish Swedish Unclassified.or.not.reported Other Table 5.1: PUMA02800 Ancestry Mappings PUMA 02800 Ancestries &gt;1% of Total Population American English French..except.Basque. French.Canadian German Greek Irish Italian Polish Portuguese Scottish Swedish Unclassified.or.not.reported Other Table 5.1: PUMA00503 Ancestry Mappings PUMA 00503 Ancestries &gt;1% of Total Population American Armenian English European French..except.Basque. French.Canadian German Greek Irish Italian Polish Russian Scottish Unclassified.or.not.reported Other 5.2.2 Sex and Age B01001 Sex by Age 5.2.3 Education B15001 Sex by educational attainment for the population 18 years and over 5.2.4 Householder Age and Household Income B19307 Age of householder by household income in the past 12 months (2021 inflation-adjusted dollars) 5.2.5 Householder Age and Tenure B25007 Tenure by Age of Householder 5.3 PUMS data ACS 5-year (2017-2021) Public Use Microdata Sample (PUMS) files for person data and for household data. These data sample approximately 5% of individual responses to the ACS. Full documentation on this data is provided in the PUMS User Guide. We have downloaded the PUMS data at the highest spatial resolution available: PUMA (Public Use Microdata Area), geographic units developed in the Decennial Census (here, 2010) of approximately 100,000 people per PUMA. ## Rows: 8 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (2): Variable, Explanation ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. ## Rows: 5 Columns: 2 ## ── Column specification ──────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (2): Variable, Explanation ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. Table 5.2: Relevant PUMS Person Variables Variable Explanation AGEP Age SEX Sex ANC1P Ancestry SCHL Educational Status SPORDER Relationship to reference person HISP Hispanic/Non-Hispanic ID Identification number SERIALNO Housing unit/GQ person serial number Table 5.2: Relevant PUMS Household Variables Variable Explanation SERIALNO Housing unit/GQ person serial number TEN Tenure (owned/rented?) HINCP Household income ADJINC Adjusted household income NP Number of people in house 5.4 ACS and PUMS Mapping Because ACS and PUMS variables within tables differ, we create variable mappings between the two datasets for each table. Some mappings are more complex than others (like Ancestry and Hispanic/Latino(a) tables). All are made into factor variables with integers used to indicate categories. The following sections outline the mappings and factors created by constraint variable: Age (B01001) Age is a continuous variable in the PUMS dataset. We create age breaks at {0, 17, 24, 34, 44, 64, 200} and make a factor variable (1:6). Age is a categorical variable in the ACS dataset (as shown above). We use the following mapping to coerce the ACS data into 6 categories that will correspond to the PUMS breaks. Table 5.3: B01001 Mapping ACS Category Recategorization Corresponding PUMS Factor (continuous integer breaks) Under 5 years 1 &lt;18 5-9 years 1 &lt;18 10-14 years 1 &lt;18 15-17 years 1 &lt;18 18 and 19 years 2 18-24 20 years 2 18-24 21 years 2 18-24 22-24 years 2 18-24 25-29 years 3 25-34 30-34 years 3 25-34 35-39 years 4 35-44 40-44 years 4 35-44 45-49 years 5 45-64 50-54 years 5 45-64 55-59 years 5 45-64 60 and 61 years 5 45-64 62-64 years 5 45-64 65 and 66 years 6 65+ 67-69 years 6 65+ 70-74 years 6 65+ 75-79 years 6 65+ 80-84 years 6 65+ 85 years and over 6 65+ Sex (B01001) The sex variable mappings do not require complex mappings (Male (1) and Female(2)). Education (B15001) The education ACS tables do not include the population under 18 years of age. In order for CO_BU.exe to function properly, the person-variables in the estimates_constraints.txt input need to sum to the respective total populations in the census tract. We complete the population for the education section of variables by calculating the remaining under 18 population (using B01001) and include this as a column in the education categories. Table 5.4: B15001 Mapping ACS Category Recategorization Corresponding PUMS Factor Less than 9th grade 2 bb N/A (less than 3 years old) Less than 9th grade 2 1 (No schooling completed) Less than 9th grade 2 2 (Nursery school, preschool) Less than 9th grade 2 3 (Kindergarten ) Less than 9th grade 2 4 (Grade 1) Less than 9th grade 2 5 (Grade 2) Less than 9th grade 2 6 (Grade 3) Less than 9th grade 2 7 (Grade 4) Less than 9th grade 2 8 (Grade 5) Less than 9th grade 2 9 (Grade 6) Less than 9th grade 2 10 (Grade 7) Less than 9th grade 2 11 (Grade 8 ) 6th to 12th grade no diploma 3 12 (Grade 9) 7th to 12th grade no diploma 3 13 (Grade 10) 8th to 12th grade no diploma 3 14 (Grade 11) 9th to 12th grade no diploma 3 15 (12th grade - no diploma) High school graduate GED or alternative 4 16 (Regular high school diploma) High school graduate GED or alternative 4 17 (GED or alternative credential) Some college no degree 5 18 (Some college, but less than 1 year) Some college no degree 5 19 (1 or more years of college credit, no degree) Associate degree 5 20 (Associate’s degree) Bachelor degree 6 21 (Bachelor’s degree) Graduate or professional degree 7 22 (Master’s degree) Graduate or professional degree 7 23 (Professional degree beyond a bachelor’s degree) Graduate or professional degree 7 24 (Doctorate degree) Below 18 years Old 1 Not included in PUMS Householder Age and Household Income (B19037) Mapping of householder age and household income variables requires setting breaks in PUMS variables (which are continuous integers) that correspond to the ACS categorical values for these variables.Note that householder age from B19037 contains fewer categories than householder age in B25007 (see next subsection). Additionally, note the added category in the ACS column for B19037 Household Income Mapping. A column of all 0 values is included in the ACS inputs to the estimation_constraints.txt data file in order to provide mapping to the NAs included in the PUMS data. Table 5.5: B19037 Householder Age Mapping ACS Category Recategorization Corresponding PUMS Factor (continuous integer breaks) Householder under 25 years 1 &lt;25 Householder 25-44 years 2 25-44 Householder 45-64 years 3 45-64 Householder 65 years and over 4 &gt;64 Table 5.5: B19037 Household Income Mapping ACS Category Recategorization Corresponding PUMS Factor (continuous integer breaks) Less than 10000 1 &lt;10000 10000-14999 2 10000-14999 15000-19999 3 15000-19999 20000-24999 4 20000-24999 25000-29999 5 25000-29999 30000-34999 6 30000-34999 35000-39999 7 35000-39999 40000-44999 8 40000-44999 45000-49999 9 45000-49999 50000-59999 10 50000-59999 60000-74999 11 60000-74999 75000-99999 12 75000-99999 100000-124999 13 100000-124999 125000-149999 14 125000-149999 150000-199999 15 150000-199999 200000 or more 16 &gt;=200000 NA (Created column where all rows == 0 to match number of PUMS categories) 17 NA Householder Age and Tenure (B25007) Mapping of householder tenure requires mapping multiple PUMS tenure categories to individual ACS categories. An additional category is also created for PUMS NA values, and a column of all 0 values is included in the ACS inputs to the estimation_constraints.txt data file in order to provide mapping to the NAs included in the PUMS data. Additionally, note the added category in the ACS column for B25007 Household Tenure Mapping. A column of all 0 values is included in the ACS inputs to the estimation_constraints.txt data file in order to provide mapping to the NAs included in the PUMS data. Table 5.6: B25007 Householder Age Mapping ACS Category Recategorization Corresponding PUMS Factor (continuous integer breaks) Householder 15-24 years 1 &lt;25 Householder 25-34 years 2 25-34 Householder 35-44 years 3 35-44 Householder 45-54 years 4 45-54 Householder 55-59 years 5 55-59 Householder 60-64 years 6 60-64 Householder 65-74 years 7 65-74 Householder 75-84 years 8 75-84 Householder 85 years and over 9 &gt;-85 Table 5.6: B25007 Household Tenure Mapping ACS Category Recategorization Corresponding PUMS Factor Owner occupied 1 1 (Owned with mortgage or loan (include home equity loans)) Owner occupied 1 2 (Owned free and clear) Renter occupied 2 3 (Rented) Renter occupied 2 4 (Occupied without payment of rent) NA (Created column where all rows == 0 to match number of PUMS categories) 3 N/A (GQ/vacant) 5.5 The Code: Attention: Before you begin - clone or download the following GitHub Repository: https://github.com/Flannery-BIng/synth_pop In this repository, you will see two subfolders: ACRESr CO_BU All R scripts are within the ACRESr folder and all Fortran scripts are within the CO_BU folder. Where possible, we have provided example output files and the folder and subfolder structures that will allow you to reproduce our code output. 5.5.1 1. PUMA data Step 1. Download housing and person level PUMA data here: https://data.census.gov/app/mdat/ACSPUMS5Y2021 Make sure you select the PUMA variables listed above (see section titled PUMS data). Step 2. Place the PUMA data in a subfolder of the ACRESr project directory titled ACS_PUMS 5.5.2 2. Prepare ACS data for CO model This section details the R project structure (hereafter referred to as ACRESr.proj) implemented prior to running CO_BU.exe. Step 1. Pulling ACS Data. Run the following code (only need to run 1x): [ACS] - 0 - Grab ACS Data.R Objectives: Pull all raw census data using census API calls. Provide census API key. Pull all custom functions (custom-functions.R). Define the PUMAs with census tracts to be included in each. Run through each individual file that pulls data: [ACS] - 0 - i - Ancestry.R This script uses a reweight function (process_puma) to get the totals to align with the totals for other categories. This script also uses a grab_top_i_percent function to collapse the number of categories to those contributing at least i% of the total population. [ACS] - 0 - i - Hispanic and Latino.R This script also uses a grab_top_i_percent function to collapse the number of categories to those contributing at least i% of the total population. [ACS] - 0 - ii - Sex and Age.R [ACS] - 0 - iii - Education.R [ACS] - 0 - iv - HHage and HHincome.R [ACS] - 0 - v - HHage and Tenure.R Step 2. Output Estimation Constraints and Area List. Run the following code (run 1x per PUMA, adjusting inputs for lines 16-18): [ACS] - 1 - combine all.R Objectives: For a given PUMA and its corresponding tracts, pull ACS columns into a table (estimation_constraints) and list all tracts (Area_list). To do after running: Copy output from this script into CO_BU/Data. Copy printed output for calc_pearson.xlsx, and then take the resulting excel column and paste into the constraining_tables_info.txt file in CO_BU/Data. Go to MA census tract data/ancestry - hispanic B03001/ and copy the resulting hispanic mapping files into the script [PUMS] - 1 - i - Create Ancestry and Hispanic and Latino Mappings.R Go to MA census tract data/ancestry B04006/ and copy the resulting ancestry mapping files into the script [PUMS] - 1 - i - Create Ancestry and Hispanic and Latino Mappings.R Step 3. Create Mapped Person and Mapped House files using PUMS data. Run the following code: [PUMS] - 1 - Read in PUMS data.R (run 1x per PUMA, adjusting lines 39 and 40). Objectives: For a given PUMA, produce person and household inputs using the PUMA, subset to the variables corresponding to those provided in the ACS table constraints used. This code runs all four [PUMS] scripts, creating mappings with [PUMS] - 1 - i - Create Ancestry and Hispanic and Latino Mappings.R, grabbing person data in [PUMS] - 1 - ii - person data.R, household data in [PUMS] - 1 - iii - house data.R, and finally creating the output files in [PUMS] - 1 - iv - convert PUMS to CO.R To do after running: Copy the mapped_person, mapped_house, and house_serials text files from the ACRESr output folder into CO_BU/Data. 5.5.3 3. Bring into the CO model 5.5.3.1 Prepare Data As described in the R Code, you should have the following files in CO_BU/Data, as listed in CO_filelist.txt (each with the PUMA indicated at the end of the file name, except for CO_random_seednumbers.txt as this does not need to change). ‘Data/mapped_house_PUMA.txt’ ‘Data/mapped_person_PUMA.txt’ ‘Data/estimation_constraints_PUMA.txt’ ‘Data/Area_list_PUMA.txt’ ‘Data/constraining_tables_info_PUMA.txt’ ‘Data/control_parameters_PUMA.txt’ Correct line 3 to reflect the name of the folders where you would like the output from CO_BU run to go (see within Estimates and Estimate_Fit). Suggested label: PUMA#. Correct lines 7 and 8 to reflect the number of constraint cells (line 7) (see calc_pearson.xlsx for this) and the number of constraint cells scaled by 10x (line 8). ‘Data/CO_random_seednumbers.txt’ 5.5.3.2 Run CO_BU.exe In the terminal, with the directory set to the co-bu-mac folder, run the following: The make file, make.sh using the code: cd Code sh make.sh Then, in order to run the executable (should see the executable has been created in the co-bu-mac folder): cd .. codesign -s - CO_BU Why codesign? See here for explanation. Run the executable: co-bu-mac % ./CO_BU 5.5.3.3 Read the output and check error Run [RESULTS] - Read CO output.R: Calls on each of the individual PUMAs and saves the output from the executable for each as an ‘.rds’ file. Run [RESULTS] - 2 - Check OTAE.R: Overall total average error (OTAE): To check the overall total average errors, run this code which pulls all OTAE per household estimates by PUMA and produces a boxplot of the distribution of error by PUMA. 5.5.4 4. Create parcel-level synthetic population Parcel data can be sourced from state-websites. For Massachusetts, this is a shapefile with a range of available variables (Geographic Information 2025). Before we can proceed with the matching algorithm, we need to do some data preparation. 5.5.4.1 Parcel centroids and PUMAs Find the centroids of parcels (we did this in GIS, could also do this in R). 01 - [SYNTHPOP] - Joining parcels-tracts-pumas.R Joins the geometries (tract to PUMA, parcel centroid to tract) 5.5.4.2 Imputation Conduct any necessary imputation on parcel data and synthetic population data. Example code for imputation of synthetic population data is available here: 02 - [SYNTHPOP] - Impute Synthpop.R 5.5.4.3 Downscale from tract-level to parcel-level To downscale further, we need additional data. For this project, we used the MassGIS Property Tax Parcels dataset (Geographic Information 2025). The key variables used from this dataset for this step were: Number of rooms Year Built Total value We conduct the matching and random allocation in the final ‘synthpop’ code file: 03 - [SYNTHPOP] - Expand MassGIS-Tract to Parcel.R References "],["application.html", "Chapter 6 Application 6.1 Use-case: proximity to major roadway 6.2 Hypothetical health impact assessment", " Chapter 6 Application Here, we detail the methods used to apply the parcel-level synthetic population to a use-case example as well as a hypothetical health impact assessment. 6.1 Use-case: proximity to major roadway We assign proximity to major roadway for each parcel as a proxy for air pollution using the following scripts: [04] - [Distance-to-road] - CALCULATE.R Calculates shortest distance to major roadways. [04b] - [Distance-to-road] - MERGE with synth pop.R Merges the distances for parcels with the synthetic population households in the respective parcels. [05a] - [Distance-to-road] - Make calculated and misclassified datasets.R Randomize to make a ‘misclassified’ version of the parcel-level data [05b] - [Distance-to-road] - Make combined dataset.R Combine calculated and ‘misclassified’ versions into one dataset [05c] - [Distance-to-road] - Make combined plots and maps.R Creates plots and maps showing the results [06a] - [Distance-to-road] - Checking for related variables.R Examines potential social determinants of health that may be associated with proximity to major roadway (as a proxy for air pollution exposure) 6.2 Hypothetical health impact assessment To evaluate whether the use of a synthetic population produced with matched vs. random allocation leads to different conclusions about health impacts, we conducted a hypothetical health impact assessment. Health impact assessments use exposure-response associations derived from the epidemiological literature. We constructed a conceptual model for a logit regression that can be applied for our example with both a main effect and a modifier variable (for example, income-level). \\[ \\text{logit}(Y) = \\beta_0 + \\beta_M \\cdot \\text{modifier} + \\beta_E \\cdot \\text{exposure} + \\beta_I \\cdot \\text{modifier} \\cdot \\text{exposure} \\] We used this model to estimate: the change in cases among householders with the exposure and modifier, testing different exposure-modifier associations and model coefficients. While this model is presented as a hypothetical, exposures might include: particulate matter heat index greenspace Modifiers may include: median household income householder race and ethnicity householder tenure householder education status The code used to conduct the hypothetical health impact assessment is provided here: [HIA] - hypothetical health impact assessment.R "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
